tests a function the multiplies two matrixes
============================================

>>> matrix_mul = __import__("100-matrix_mul").matrix_mul
>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
[[7, 10], [15, 22]]
>>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
[[13, 16]]

tests with invalid args
-----------------------
>>> matrix_mul("not a list", [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_a must be a list

>>> matrix_mul([[1, 2], [3, 4]], "not a list")
Traceback (most recent call last):
TypeError: m_b must be a list

>>> matrix_mul([8, 6], [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_a must be a list of lists

>>> matrix_mul([[1, 2], [3, 4]], [8, 6])
Traceback (most recent call last):
TypeError: m_b must be a list of lists

>>> matrix_mul([], [[1, 2], [3, 4]])
Traceback (most recent call last):
ValueError: m_a can't be empty

>>> matrix_mul([[1, 2], [3, 4]], [[]])
Traceback (most recent call last):
ValueError: m_b can't be empty

>>> matrix_mul([[2, 'b'], [5, 3]], [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: m_a should contain only integers or floats

>>> matrix_mul([[1, 2], [3, 4]], [[1, [1]], [2, 3]])
Traceback (most recent call last):
TypeError: m_b should contain only integers or floats

>>> matrix_mul([[1, 2], [1, 2, 3]], [[1, 2], [3, 4]])
Traceback (most recent call last):
TypeError: each row of m_a must be of the same size

>>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4, 5]])
Traceback (most recent call last):
TypeError: each row of m_b must be of the same size
